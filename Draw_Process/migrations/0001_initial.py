# Generated by Django 2.0.7 on 2020-09-14 13:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('div_id', models.CharField(blank=True, max_length=255, null=True)),
                ('node_no', models.IntegerField(blank=True, null=True)),
                ('function', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_node', models.CharField(blank=True, max_length=255, null=True)),
                ('next_node', models.CharField(blank=True, max_length=255, null=True)),
                ('input', models.CharField(blank=True, max_length=255, null=True)),
                ('output', models.CharField(blank=True, max_length=255, null=True)),
                ('variant', models.CharField(blank=True, max_length=1000, null=True)),
                ('public_variant', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=255)),
                ('group', models.CharField(blank=True, max_length=255, null=True)),
                ('group_id', models.CharField(blank=True, max_length=255, null=True)),
                ('group_node_no', models.IntegerField(blank=True, null=True)),
                ('group_source_type', models.CharField(blank=True, max_length=255, null=True)),
                ('group_target_type', models.CharField(blank=True, max_length=255, null=True)),
                ('group_left', models.CharField(blank=True, max_length=255, null=True)),
                ('group_top', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('tab', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'actions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=1)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'company',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_code', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('parent_code', models.CharField(max_length=64)),
                ('parent_codes', models.CharField(max_length=1000)),
                ('tree_sort', models.DecimalField(decimal_places=0, max_digits=10)),
                ('tree_sorts', models.CharField(max_length=1000)),
                ('tree_leaf', models.CharField(max_length=1)),
                ('tree_level', models.DecimalField(decimal_places=0, max_digits=4)),
                ('tree_names', models.CharField(max_length=1000)),
                ('department_name', models.CharField(max_length=100)),
                ('full_name', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=1)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=64)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Draw_Process.Company')),
            ],
            options={
                'db_table': 'department',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder', models.CharField(max_length=1000)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'folder',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('functionname', models.CharField(max_length=255)),
                ('estimate_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'function',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FunctionPermission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('module', models.CharField(max_length=255)),
                ('function', models.CharField(blank=True, max_length=255, null=True)),
                ('permission', models.CharField(blank=True, max_length=255, null=True)),
                ('perm', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'function_permission',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MenuPermission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('child_name1', models.CharField(blank=True, max_length=255, null=True)),
                ('child_name2', models.CharField(blank=True, max_length=255, null=True)),
                ('child_name3', models.CharField(blank=True, max_length=255, null=True)),
                ('child_name4', models.CharField(blank=True, max_length=255, null=True)),
                ('permission', models.CharField(blank=True, max_length=255, null=True)),
                ('perm', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'menu_permission',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=1)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'organization',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.CharField(max_length=255)),
                ('package', models.CharField(max_length=255)),
                ('codes', models.CharField(blank=True, max_length=1000, null=True)),
                ('codes_1', models.CharField(blank=True, max_length=1000, null=True)),
                ('codes_2', models.CharField(blank=True, max_length=1000, null=True)),
                ('codes_3', models.CharField(blank=True, max_length=1000, null=True)),
                ('codes_4', models.CharField(blank=True, max_length=1000, null=True)),
                ('codes_5', models.CharField(blank=True, max_length=1000, null=True)),
                ('codes_6', models.CharField(blank=True, max_length=1000, null=True)),
                ('module', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'packages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PanelPermission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('child_name1', models.CharField(blank=True, max_length=255, null=True)),
                ('child_name2', models.CharField(blank=True, max_length=255, null=True)),
                ('child_name3', models.CharField(blank=True, max_length=255, null=True)),
                ('child_name4', models.CharField(blank=True, max_length=255, null=True)),
                ('permission', models.CharField(blank=True, max_length=255, null=True)),
                ('perm', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'panel_permission',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProcessCopy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('div_id', models.CharField(blank=True, max_length=255, null=True)),
                ('function', models.CharField(max_length=255)),
                ('input', models.CharField(blank=True, max_length=255, null=True)),
                ('output', models.CharField(blank=True, max_length=255, null=True)),
                ('variant', models.CharField(blank=True, max_length=1000, null=True)),
                ('public_variant', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'process_copy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RobotInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('robot_name', models.CharField(blank=True, max_length=255, null=True)),
                ('robot_status', models.IntegerField(choices=[(1, '离线'), (2, '在线空闲'), (3, '在线忙碌')], default=1)),
                ('schedule', models.FloatField(blank=True, null=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('reverse1', models.CharField(blank=True, max_length=255, null=True)),
                ('reverse2', models.CharField(blank=True, max_length=255, null=True)),
                ('reverse3', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'robot_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rolelist',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'rolelist',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SelectInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.CharField(max_length=255)),
                ('variant', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('text', models.CharField(max_length=255)),
                ('choose', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'select_information',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('file_name', models.CharField(max_length=1000)),
                ('node_no', models.IntegerField(blank=True, null=True)),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('target_id', models.CharField(blank=True, max_length=255, null=True)),
                ('source_type', models.CharField(blank=True, max_length=255, null=True)),
                ('target_type', models.CharField(blank=True, max_length=255, null=True)),
                ('jnode_class', models.CharField(blank=True, max_length=1000, null=True)),
                ('jnode', models.CharField(blank=True, max_length=1000, null=True)),
                ('jnode_html', models.CharField(blank=True, max_length=1000, null=True)),
                ('left', models.CharField(blank=True, max_length=255, null=True)),
                ('top', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('input', models.CharField(blank=True, max_length=255, null=True)),
                ('output', models.CharField(blank=True, max_length=255, null=True)),
                ('variant', models.CharField(blank=True, max_length=1000, null=True)),
                ('public_variant', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=255)),
                ('group', models.CharField(blank=True, max_length=255, null=True)),
                ('group_id', models.CharField(blank=True, max_length=255, null=True)),
                ('group_node_no', models.IntegerField(blank=True, null=True)),
                ('group_node_name', models.CharField(blank=True, max_length=255, null=True)),
                ('group_source_type', models.CharField(blank=True, max_length=255, null=True)),
                ('group_target_type', models.CharField(blank=True, max_length=255, null=True)),
                ('group_left', models.CharField(blank=True, max_length=255, null=True)),
                ('group_top', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'store',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SysArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_code', models.TextField(blank=True, null=True)),
                ('parent_code', models.CharField(blank=True, max_length=192, null=True)),
                ('parent_codes', models.TextField(blank=True, null=True)),
                ('tree_sort', models.BigIntegerField(blank=True, null=True)),
                ('tree_sorts', models.TextField(blank=True, null=True)),
                ('tree_leaf', models.CharField(blank=True, max_length=3, null=True)),
                ('tree_level', models.BigIntegerField(blank=True, null=True)),
                ('tree_names', models.TextField(blank=True, null=True)),
                ('area_name', models.TextField(blank=True, null=True)),
                ('area_type', models.CharField(blank=True, max_length=3, null=True)),
                ('status', models.CharField(blank=True, max_length=3, null=True)),
                ('create_by', models.CharField(blank=True, max_length=192, null=True)),
                ('create_date', models.DateField(blank=True, null=True)),
                ('update_by', models.CharField(blank=True, max_length=192, null=True)),
                ('update_date', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sys_area',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SysRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_code', models.CharField(blank=True, max_length=192, null=True)),
                ('role_name', models.TextField(blank=True, null=True)),
                ('role_type', models.TextField(blank=True, null=True)),
                ('role_sort', models.BigIntegerField(blank=True, null=True)),
                ('is_sys', models.CharField(blank=True, max_length=3, null=True)),
                ('user_type', models.CharField(blank=True, max_length=48, null=True)),
                ('status', models.CharField(blank=True, max_length=3, null=True)),
                ('create_by', models.CharField(blank=True, max_length=192, null=True)),
                ('create_on', models.DateTimeField(blank=True, null=True)),
                ('update_by', models.CharField(blank=True, max_length=192, null=True)),
                ('update_on', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'sys_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.FloatField(blank=True, null=True)),
                ('task_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('notification', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('booked_time', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=255)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_information',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc_name', models.CharField(blank=True, max_length=255, null=True)),
                ('task_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file_path', models.CharField(max_length=255)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('result', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('step', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('create_on', models.DateTimeField()),
                ('create_by', models.CharField(max_length=255)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_result',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AuthMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fixed_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('signature', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('update_date', models.DateField(blank=True, null=True)),
                ('operator', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('licence_date', models.DateField(blank=True, null=True)),
                ('userlevel', models.IntegerField(choices=[(1, '免费用户'), (2, '付费用户类型1'), (3, '付费用户类型2'), (4, '付费用户类型3'), (5, '企业用户')], default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Draw_Process.Department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='rolelist',
            unique_together={('id', 'name')},
        ),
        migrations.AddField(
            model_name='robotinfo',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='menupermission',
            unique_together={('id', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='functionpermission',
            unique_together={('id', 'module')},
        ),
        migrations.AddField(
            model_name='company',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Draw_Process.Organization'),
        ),
    ]
